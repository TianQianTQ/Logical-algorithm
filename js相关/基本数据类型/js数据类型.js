/**● 简单数据类型5种（基本数据类型）：null、undefined、number、string、boolean  ● 一种复杂数据类型：object  ● js中，由于其变量内容不同，变量分为基本数据类型和引用数据类型  (8字节内存)。只保存对象、数组和函数等引用类型的值的引用（即内存地址）● 基本类型：null 、undefined、number、boolean   简单的数据段    使用typeof检测  ● 引用类型：object、array、function    多个值构成的对象      使用instanceof检测  ● typeof的值：undefined(值未定义)、boolean、string、number、object（null或对象）、function、symbol(ES6)  ● null:表示一个空对象指针  ● boolean:检测返回：空字符串、false/0/NaN、null、undefined  ● NaN:不认识自己，NaN == NaN  //false     isNaN(true) //false *//** * 闭包就是能够读取其他函数内部变量的函数。 概念：闭包就是能够读取其他函数内部变量的函数 理解：在JavaScript语言中，只有函数内部的子函数才能读取局部变量，因此可以把闭包简单理解成“定义在一个函数内部的函数”，作以在本质上，闭包是将函数内部和外部连接起来的一座桥梁。 用途：读取函数内部的变量，将这些变量值始终保存在内存中。 注意：1）由于闭包会使得函数中的变量都被保存在内存中，内存消耗很大，故不能滥用闭包，否则会造成网页性能问题，在IE中可能导致内存泄漏。解决：在退出函数之前，将不使用的局部变量全部删除。 2）闭包会在福函数外部，改变父函数内部变量的值。所以如果把父函数当做对象使用，把闭包当做它的公用方法，把内部变量当做它的私有属性，这时需注意不要随便改父函数内部变量的值。 *//** *● function与Function的区别：Function是一个功能完整的对象，作为JS的内置对象之一。function是一个关键字，用来构造一个普通函数或者对象的构造函数。 ● 函数声明和函数表达式： 函数表达式：使用function声明一个函数，但没有函数名，将这个函数赋给一个变量，也叫做匿名函数。在代码执行到那一行时才被定义，提前使用会报错。在调用时只被解析一次。 立即执行匿名函数，后面加() 函数声明：使用function声明一个函数，再为其指定定一个函数名。在使用之前就加载到作用域中，随时等待调用。 使用Function对象构造函数创建函数。比其他两种慢。通过构造函数动态的创建和编译函数，不要过多使用。每次调用都要被解析和编译。 ● js函数特点： 因为JS的弱类型特性，函数形参无法指定具体类型，返回类型自然也没有，return可以返回任何类型。 JS函数不限制传递的参数数量。这表明就算函数的参数列表已确定，照样可以传入多个参数。 JS函数没有重载，如果有同名函数，后一个会覆盖前一个。 ● arguments对象 ● 是每个函数内部都有的内部对象，函数所有接受的实参都由它来存储管理。取值方式和数组差不多。 * */