/** * setTimeout和setInterval * 区别：setTimeout执行一次，setInterval循环执行（只要不清除） * 核心： js以单线程运行，setTimeout和setInterval的作用只是把你要执行的代码在你设定的一个时间点插入js引擎维护的一个代码队列中, * 插入代码队列并不意味着你的代码就会立马执行的，等队列上的代码段执行完毕之后再执行（可能比预定的时间长）， * setInterval时间间隔可能会跳过（如果队列之前的代码执行时间超过预定间隔时间），也可能小于定时器设定的时间执行的是回调函数。 * 概念：定时器由js的timer计时，将当前传入的函数插在待执行队列中，当当前同步的事件执行完毕后再执行函数。后面的时间是根据事件插入队列开始计时，一般会有延迟 * 就算时间设置为0，也是推迟4毫秒（H5） ，为防止多个连续执行，造成性能问题 */// 互相实现：1、setTimeout实现setInterval    function f(){        console.log('setTimeout模拟setInterval，每秒钟打印一次');        setTimeout(f, 1000);    }    setTimeout(f, 1000);// setInterval实现setTimeout    function f(){        console.log('setInterval模拟setTimeout，只会打印一次，清除timer后停止');        clearInterval(timer);    }var timer = setInterval(f, 1000);